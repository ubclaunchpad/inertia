openapi: 3.0.0

info:
  version: 0.5.2
  title: Inertia Daemon API Reference
  description: |

    This is the reference documentation for the Inertia daemon's REST API.

    # About Inertia

    For a more general usage guide, check out the
    [Inertia Usage Guide](https://inertia.ubclaunchpad.com). A
    [CLI reference](https://inertia.ubclaunchpad.com/cli) is also available.

    If you find any issues, please feel free to
    [open an issue](https://github.com/ubclaunchpad/inertia/issues/new/choose)!

    # Request Authentication

    Inertia issues JWTs for request authentication. Using the CLI, a persistent
    key is generated - for general use, you should
    [create a user and log in](https://inertia.ubclaunchpad.com/api/#tag/Authentication)
    to receive a user-specific JWT.

    <security-definitions /> 
  contact:
    name: UBC Launch Pad
    email: team@ubclaunchpad.com
    url: https://github.com/ubclaunchpad/inertia
  license:
    name: MIT
    url: https://github.com/ubclaunchpad/inertia/blob/master/LICENSE
  x-logo:
    url: 'https://github.com/ubclaunchpad/inertia/blob/master/.static/inertia.png?raw=true'
    altText: Inertia logo

x-tagGroups:
  - name: API
    tags: [ Deployment, Monitoring, Authentication ]

servers:
  - url: https://$DAEMON_ADDR:$DAEMON_PORT

paths:

  /up:
    post:
      summary: Start up project
      description: Build and deploy your project
      tags: [ Deployment ]
      security: [ bearer_auth: [] ]
      externalDocs:
        description: Repository configuration
        url: https://inertia.ubclaunchpad.com/#configuring-your-repository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  type: boolean
                  description: Whether or not to stream log output 
                project:
                  type: string
                build_type:
                  type: string
                build_file_path:
                  type: string
                git_options:
                  type: object
                  properties:
                    remote:
                      type: string
                    branch:
                      type: string
                webhook_secret:
                  type: string
      responses:
        201:
          description: 'Project deployment successfully started'
          content:
            text/plain:
              type: string
              example: |
                No deployment detected
                Setting up project...
                Cloning branch dev from git@github.com:example/example.git...
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /down:
    post:
      summary: Shut down project
      description: Shuts down project containers
      tags: [ Deployment ]
      security: [ bearer_auth: [] ]
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /reset:
    post:
      summary: Remove project
      description: Reset daemon and remove project from deployment
      tags: [ Deployment ]
      security: [ bearer_auth: [] ]
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /env:
    post:
      summary: Update environment variables
      description: Set environment variables
      tags: [ Deployment ]
      security: [ bearer_auth: [] ]
      externalDocs:
        description: Secrets management
        url: https://inertia.ubclaunchpad.com/#secrets-management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name, value ]
              properties:
                name:
                  type: string
                value:
                  type: string
                encrypt:
                  type: boolean
                remove:
                  type: boolean
      responses:
        202:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'
    get:
      summary: Retrieve environment variables
      description: Retrieve configured environment variables
      tags: [ Deployment ]
      security: [ bearer_auth: [] ]
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ variables ]
                        properties:
                          variables:
                            type: array
                            items:
                              type: string
                            example: [ KEY1=VAL1, KEY2=VAL2 ]
                            description: all currently set environment variables in KEY=VALUE pairs
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /webhook:
    post:
      summary: Webhooks
      description: Accepts incoming payloads from Git hosts (GitHub, GitLab, and Bitbucket)
      tags: [ Deployment ]
      externalDocs:
        description: Repository configuration
        url: https://inertia.ubclaunchpad.com/#configuring-your-repository
      responses:
        202:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  # monitoring

  /:
    get:
      summary: Daemon healthcheck
      description: Returns OK if daemon is online and ready
      tags: [ Monitoring ]
      responses:
        200:
          description: Daemon is online
          content:
            text/plain:
              type: string
              example: Hello world!

  /status:
    get:
      summary: Deployment status check
      description: Check the status of your Inertia deployment
      tags: [ Deployment, Monitoring ]
      security: [ bearer_auth: [] ]
      externalDocs:
        description: Deployment monitoring
        url: https://inertia.ubclaunchpad.com/#monitoring
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ version ]
                        properties:
                          version:
                            type: string
                            description: Inertia daemon version
                          branch:
                            type: string
                            description: Currently deployed project branch
                          commit_hash:
                            type: string
                          commit_message:
                            type: string
                          build_type:
                            type: string
                          containers:
                            type: array
                            items:
                              type: string
                            example: [ /docker-compose, /server ]
                          build_active:
                            type: boolean
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /logs:
    get:
      summary: View deployment logs
      description: View logs of the Inertia daemon or project containers
      tags: [ Deployment, Monitoring ]
      security: [ bearer_auth: [] ]
      externalDocs:
        description: Deployment monitoring
        url: https://inertia.ubclaunchpad.com/#monitoring
      parameters:
        - in: query
          name: container
          schema:
            type: string
          description: Name of container to fetch logs for - leave blank for Inertia daemon logs
          example: /docker-compose
        - in: query
          name: stream
          schema:
            type: boolean
          description: Whether or not to upgrade connection to a websocket
          example: true
        - in: query
          name: entries
          schema:
            type: integer
          description: Number of lines of logs to fetch (default 500)
          example: 500
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ token ]
                        properties:
                          token:
                            type: array
                            items:
                              type: string
                            description: Array of log entries
                            example:
                              - No deployment detected
                              - Setting up project...
                              - Cloning branch dev from git@github.com:example/example.git...
        4XX,5XX:
          $ref: '#/components/responses/Error'           

  # auth

  /user/validate:
    get:
      summary: Validate JWT
      description: Validate your JWT
      tags: [ Authentication ]
      security: [ bearer_auth: [] ]
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/login:
    post:
      summary: Log in as user
      description: Authenticate as a user to Inertia daemon
      tags: [ Authentication ]
      security: [ bearer_auth: [] ]
      externalDocs:
        description: Team management
        url: https://inertia.ubclaunchpad.com/#teams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                totp:
                  type: string
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ token ]
                        properties:
                          token:
                            type: string
                            example: abcdefg
                            description: JWT for API access
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/list:
    get:
      summary: List users
      description: List all currently registered users on the Inertia daemon
      tags: [ Authentication ]
      security: [ bearer_auth: [admin:true] ]
      externalDocs:
        description: Team management
        url: https://inertia.ubclaunchpad.com/#teams
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ users ]
                        properties:
                          users:
                            type: array
                            items:
                              type: string
                            example: [ bobheadxi, mRabitsky, seifghazi, terryz21, theblackathena, yaoharry ]
                            description: list of currently registered users
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/add:
    post:
      summary: Add user
      description: Register a new user in the Inertia daemon
      tags: [ Authentication ]
      security: [ bearer_auth: [admin:true] ]
      externalDocs:
        description: Team management
        url: https://inertia.ubclaunchpad.com/#teams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ username, password ]
              properties:
                username:
                  type: string
                password:
                  type: string
                admin:
                  type: boolean
      responses:
        201:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/remove:
    post:
      summary: Remove user
      description: Unregister a user from the Inertia daemon
      tags: [ Authentication ]
      security: [ bearer_auth: [admin:true] ]
      externalDocs:
        description: Team management
        url: https://inertia.ubclaunchpad.com/#teams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ username ]
              properties:
                username:
                  type: string
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/reset:
    post:
      summary: Reset all users
      description: Remove all users from the Inertia daemon
      tags: [ Authentication ]
      security: [ bearer_auth: [admin:true] ]
      externalDocs:
        description: Team management
        url: https://inertia.ubclaunchpad.com/#teams
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/totp/enable:
    post:
      summary: Enable 2FA for user
      description: Enables TOTP-based 2FA for the given user
      tags: [ Authentication ]
      security: [ bearer_auth: [admin:true] ]
      externalDocs:
        description: 2-factor authentication
        url: https://inertia.ubclaunchpad.com/#2-factor-authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ username, password ]
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: '2FA successfully enabled for user'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ secret, backup_codes ]
                        properties:
                          secret:
                            type: string
                            example: secret_key
                            description: TOTP secret key
                          backup_codes:
                            type: array
                            items:
                              type: string
                            example: [ code1, code2, code3 ]
                            description: TOTP backup codes
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/totp/disable:
    post:
      summary: Disable 2FA for user
      description: Disable TOTP-based 2FA for the given user
      tags: [ Authentication ]
      security: [ bearer_auth: [admin:true] ]
      externalDocs:
        description: 2-factor authentication
        url: https://inertia.ubclaunchpad.com/#2-factor-authentication
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

components:
  securitySchemes:
    bearer_auth:
      description: JWT issued by Inertia
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    OK:
      description: Success!
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OKResponse'
    Error:
      description: Something went wrong - refer to the error code and message for more details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrResponse'
  schemas:
    OKResponse:
      required: [ code, message ]
      properties:
        code:
          type: integer
          description: HTTP status code
        message:
          type: string
          example: (example) successfully did something!
          description: summary of response
        request_id:
          type: string
          example: example/2Mch7LMzhj-000023
          description: generated request ID corresponding to request
        data:
          type: object
          additionalProperties: true
          description: response data and additional context
    ErrResponse:
      required: [ code, message, error ]
      properties:
        code:
          type: integer
          description: HTTP status code
        message:
          type: string
          example: (example) could not do something
          description: summary of response
        error:
          type: string
          example: (example) value x is missing
          description: detailed about error message
        request_id:
          type: string
          example: example/2Mch7LMzhj-000023
          description: generated request ID corresponding to request
        data:
          type: object
          additionalProperties: true
          description: additional context about error
          example:
            example: here is some additional information
