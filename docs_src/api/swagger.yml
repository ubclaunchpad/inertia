openapi: 3.0.0

info:
  version: 0.5.2
  title: Inertia Daemon API
  description: The Inertia daemon's REST API
  contact:
    name: UBC Launch Pad
    email: team@ubclaunchpad.com
    url: https://github.com/ubclaunchpad/inertia
  license:
    name: MIT
    url: https://github.com/ubclaunchpad/inertia/blob/master/LICENSE

servers:
  - url: https://$DAEMON_ADDR:$DAEMON_PORT

paths:
  /:
    get:
      summary: Daemon healthcheck
      description: Returns OK if daemon is online and ready
      responses:
        2XX:
          description: daemon is online
          content:
            text/plain:
              type: string

  /webhook:
    post:
      summary: Webhook endpoint
      description: Accepts incoming payloads from Git hosts
      responses:
        2XX:
          description: hello world
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /status:
    get:
      summary: Deployment status check
      description: Check deployment status
      responses:
        2XX:
          description: hello world
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /up:
    post:
      summary: Start up project
      description: Build and deploys your project
      responses:
        2XX:
          description: 'Deployed'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /down:
    post:
      summary: Shut down project
      description: Shuts down project containers
      responses:
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /reset:
    post:
      summary: Remove project
      description: Reset daemon and remove project from deployment
      responses:
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /env:
    post:
      summary: Update environment variables
      description: asdf
      responses:
        4XX,5XX:
          $ref: '#/components/responses/Error'
    get:
      summary: Retrieve environment variables
      description: asdf
      responses:
        200:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ variables ]
                        properties:
                          varoan;es:
                            type: array
                            items:
                              type: string
        4XX,5XX:
          $ref: '#/components/responses/Error'

  # auth

  /user/validate:
    get:
      summary: Validate token
      description: asdf
      responses:
        2XX:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'
  /user/login:
    post:
      summary: Log in as user
      description: asdf
      responses:
        2XX:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'
  /user/list:
    get:
      summary: List all users
      description: asdf
      responses:
        2XX:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'
  /user/add:
    post:
      summary: Add user
      description: asdf
      responses:
        2XX:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'
  /user/remove:
    post:
      summary: Remove user
      description: asdf
      responses:
        2XX:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/reset:
    post:
      summary: Reset all users
      description: asdf
      responses:
        2XX:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/totp/enable:
    post:
      summary: Enable 2FA for user
      description: asdf
      responses:
        2XX:
          description: '2FA successfully enabled for user'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ secret, backup_codes ]
                        properties:
                          secret:
                            type: string
                          backup_codes:
                            type: array
                            items:
                              type: string
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/totp/disable:
    post:
      summary: Disable 2FA for user
      description: asdf
      responses:
        2XX:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

components:
  responses:
    OK:
      description: Success!
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OKResponse'
    Error:
      description: Something went wrong - refer to the error code and message for more details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrResponse'
  schemas:
    OKResponse:
      required: [ code, message ]
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: Successfully did something!
        request_id:
          type: string
          example: bobbook/2Mch7LMzhj-000023
        data:
          type: object
          description: response data and additional context
    ErrResponse:
      required: [ code, message, error ]
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: (example) could not do something
        error:
          type: string
          example: (example) value x is missing.
        request_id:
          type: string
          example: example/2Mch7LMzhj-000023
        data:
          type: object
          additionalProperties: true
          description: additional context
          example:
            example: here is some additional information
