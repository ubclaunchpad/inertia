openapi: 3.0.0

info:
  version: 0.5.2
  title: Inertia Daemon API
  description: The Inertia daemon's REST API
  contact:
    name: UBC Launch Pad
    email: team@ubclaunchpad.com
    url: https://github.com/ubclaunchpad/inertia
  license:
    name: MIT
    url: https://github.com/ubclaunchpad/inertia/blob/master/LICENSE

servers:
  - url: https://$DAEMON_ADDR:$DAEMON_PORT

paths:
  /:
    get:
      summary: Daemon healthcheck
      description: Returns OK if daemon is online and ready
      responses:
        200:
          description: Daemon is online
          content:
            text/plain:
              type: string
              example: Hello world!

  /webhook:
    post:
      summary: Webhook endpoint
      description: Accepts incoming payloads from Git hosts (GitHub, GitLab, and Bitbucket)
      externalDocs:
        description: Repository configuration
        url: https://inertia.ubclaunchpad.com/#configuring-your-repository
      responses:
        202:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /status:
    get:
      summary: Deployment status check
      description: Check the status of your Inertia deployment
      security: [ bearerAuth: [] ]
      responses:
        200:
          description: hello world
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /up:
    post:
      summary: Start up project
      description: Build and deploy your project
      security: [ bearerAuth: [] ]
      externalDocs:
        description: Repository configuration
        url: https://inertia.ubclaunchpad.com/#configuring-your-repository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  type: boolean
                project:
                  type: string
                build_type:
                  type: string
                build_file_path:
                  type: string
                git_options:
                  type: object
                  properties:
                    remote:
                      type: string
                    branch:
                      type: string
                webhook_secret:
                  type: string
      responses:
        201:
          description: 'Project deployment successfully started'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /down:
    post:
      summary: Shut down project
      description: Shuts down project containers
      security: [ bearerAuth: [] ]
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /reset:
    post:
      summary: Remove project
      description: Reset daemon and remove project from deployment
      security: [ bearerAuth: [] ]
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /env:
    post:
      summary: Update environment variables
      description: Set environment variables
      security: [ bearerAuth: [] ]
      externalDocs:
        description: Secrets management
        url: https://inertia.ubclaunchpad.com/#secrets-management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
                encrypt:
                  type: boolean
                remove:
                  type: boolean
      responses:
        202:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'
    get:
      summary: Retrieve environment variables
      description: Retrieve configured environment variables
      security: [ bearerAuth: [] ]
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ variables ]
                        properties:
                          variables:
                            type: array
                            items:
                              type: string
                            example: [ KEY1=VAL1, KEY2=VAL2 ]
                            description: all currently set environment variables in KEY=VALUE pairs
        4XX,5XX:
          $ref: '#/components/responses/Error'

  # auth

  /user/validate:
    get:
      summary: Validate JWT
      description: Validate your JWT
      security: [ bearerAuth: [] ]
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'
  /user/login:
    post:
      summary: Log in as user
      description: Authenticate as a user to Inertia daemon
      security: [ bearerAuth: [] ]
      externalDocs:
        description: Team management
        url: https://inertia.ubclaunchpad.com/#teams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                totp:
                  type: string
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ token ]
                        properties:
                          token:
                            type: string
                            example: abcdefg
                            description: JWT for API access
        4XX,5XX:
          $ref: '#/components/responses/Error'
  /user/list:
    get:
      summary: List users
      description: List all currently registered users on the Inertia daemon
      security: [ bearerAuth: [admin:true] ]
      externalDocs:
        description: Team management
        url: https://inertia.ubclaunchpad.com/#teams
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ users ]
                        properties:
                          users:
                            type: array
                            items:
                              type: string
                            example: [ bobheadxi, mRabitsky, seifghazi, terryz21, theblackathena, yaoharry ]
                            description: list of currently registered users
        4XX,5XX:
          $ref: '#/components/responses/Error'
  /user/add:
    post:
      summary: Add user
      description: Register a new user in the Inertia daemon
      security: [ bearerAuth: [admin:true] ]
      externalDocs:
        description: Team management
        url: https://inertia.ubclaunchpad.com/#teams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                admin:
                  type: boolean
      responses:
        201:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'
  /user/remove:
    post:
      summary: Remove user
      description: Unregister a user from the Inertia daemon
      security: [ bearerAuth: [admin:true] ]
      externalDocs:
        description: Team management
        url: https://inertia.ubclaunchpad.com/#teams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/reset:
    post:
      summary: Reset all users
      description: Remove all users from the Inertia daemon
      security: [ bearerAuth: [admin:true] ]
      externalDocs:
        description: Team management
        url: https://inertia.ubclaunchpad.com/#teams
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/totp/enable:
    post:
      summary: Enable 2FA for user
      description: Enables TOTP-based 2FA for the given user
      security: [ bearerAuth: [admin:true] ]
      externalDocs:
        description: 2-factor authentication
        url: https://inertia.ubclaunchpad.com/#2-factor-authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: '2FA successfully enabled for user'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/OKResponse'
                  - type: object
                    required: [ data ]
                    properties:
                      data:
                        type: object
                        required: [ secret, backup_codes ]
                        properties:
                          secret:
                            type: string
                            example: secret_key
                            description: TOTP secret key
                          backup_codes:
                            type: array
                            items:
                              type: string
                            example: [ code1, code2, code3 ]
                            description: TOTP backup codes
        4XX,5XX:
          $ref: '#/components/responses/Error'

  /user/totp/disable:
    post:
      summary: Disable 2FA for user
      description: Disable TOTP-based 2FA for the given user
      security: [ bearerAuth: [admin:true] ]
      externalDocs:
        description: 2-factor authentication
        url: https://inertia.ubclaunchpad.com/#2-factor-authentication
      responses:
        200:
          $ref: '#/components/responses/OK'
        4XX,5XX:
          $ref: '#/components/responses/Error'

components:
  securitySchemes:
    bearerAuth:
      description: JWT issued by Inertia
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    OK:
      description: Success!
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OKResponse'
    Error:
      description: Something went wrong - refer to the error code and message for more details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrResponse'
  schemas:
    OKResponse:
      required: [ code, message ]
      properties:
        code:
          type: integer
          description: HTTP status code
        message:
          type: string
          example: (example) successfully did something!
          description: summary of response
        request_id:
          type: string
          example: example/2Mch7LMzhj-000023
          description: generated request ID corresponding to request
        data:
          type: object
          additionalProperties: true
          description: response data and additional context
    ErrResponse:
      required: [ code, message, error ]
      properties:
        code:
          type: integer
          description: HTTP status code
        message:
          type: string
          example: (example) could not do something
          description: summary of response
        error:
          type: string
          example: (example) value x is missing
          description: detailed about error message
        request_id:
          type: string
          example: example/2Mch7LMzhj-000023
          description: generated request ID corresponding to request
        data:
          type: object
          additionalProperties: true
          description: additional context about error
          example:
            example: here is some additional information
